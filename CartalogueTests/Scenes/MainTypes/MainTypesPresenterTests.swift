//
//  MainTypesPresenterTests.swift
//  Cartalogue
//
//  Created by Caio de Souza on 29/04/2018.
//  Copyright (c) 2018 Caio de Souza. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Cartalogue
import XCTest

class MainTypesPresenterTests: XCTestCase{
  // MARK: Subject under test
  
  var sut: MainTypesPresenter!
  
  // MARK: Test lifecycle
  
  override func setUp(){
    super.setUp()
    setupMainTypesPresenter()
  }
  
  override func tearDown(){
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupMainTypesPresenter(){
    sut = MainTypesPresenter()
  }
  
  // MARK: Test doubles
  
class MainTypesDisplayLogicSpy: MainTypesDisplayLogic{
    var colorForIndexPathCalled = false
    var presentAlertCalled = false
    var updateCurrentPageLabel = false
    var displayFetchManufacturersCalled = false
    var updateCurrentPageLabelCalled = false
    var endRefreshControlIfNeededCalled = false
    
    func displayFetchMainTypes(viewModel: MainTypes.FetchMainTypes.ViewModel) {
        displayFetchManufacturersCalled = true
    }
    
    func updateCurrentPageLabel(viewModel: MainTypes.FetchMainTypes.ViewModel) {
        updateCurrentPageLabel = true
    }
    
    func colorFor(_ indexPath: IndexPath) -> UIColor {
        colorForIndexPathCalled = true
        return UIColor.black
    }
    
    func presentAlert(title: String?, message: String?) {
        presentAlertCalled = true
    }
    
    func endRefreshControlIfNeeded() {
        endRefreshControlIfNeededCalled = true
    }
    
    
}
  
  // MARK: Tests
  
  func testPresentMainTypes(){
    let spy = MainTypesDisplayLogicSpy()
    sut.viewController = spy
    let manufacturer = Seeds.API.page0APIManufacturer
    let response = MainTypes.FetchMainTypes.Response(mainTypes: manufacturer)
    
    // When
    sut.presentFetchManufacturers(response: response)
    
    // Then
    XCTAssertTrue(spy.displayFetchManufacturersCalled, "PresentManufacturer(response:) should ask the view controller to display the result")
  }
}
