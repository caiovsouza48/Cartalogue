//
//  MainTypesInteractorTests.swift
//  Cartalogue
//
//  Created by Caio de Souza on 29/04/2018.
//  Copyright (c) 2018 Caio de Souza. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Cartalogue
import XCTest

class MainTypesInteractorTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: MainTypesInteractor!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    setupMainTypesInteractor()
  }
  
  override func tearDown()
  {
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupMainTypesInteractor()
  {
    sut = MainTypesInteractor()
  }
  
  // MARK: Test doubles
  
  class MainTypesPresentationLogicSpy: MainTypesPresentationLogic{
        
        
        
        
  // MARK: Method call expectations
  var presentFetchMainTypessCalled = true
  var presentErrorAlertCalled = true
  var endRefreshControlIfNeededCalled = true

  // MARK: Spied methods
  func presentFetchManufacturers(response: MainTypes.FetchMainTypes.Response) {
        presentFetchMainTypessCalled = true
    }

    func presentErrorAlert(title: String?, message: String?) {
        presentErrorAlertCalled = true
    }

    func endRefreshControlIfNeeded() {
        endRefreshControlIfNeededCalled = true
    }
    
}
  
  // MARK: Tests

  func testFetchManufacturersShouldAskPresenterDoPresentationLogic(){
        // Given
        let spy = MainTypesPresentationLogicSpy()
        sut.presenter = spy
        let request = MainTypes.FetchMainTypes.Request(parameters: Seeds.SeededMainTypesParameters.page0Size15ID020Parameter)
    
        // When
        sut.doFetchMainTypes(request: request)
    
        // Then
        XCTAssertTrue(spy.presentFetchMainTypessCalled, "doFetchMainTypes(request:) should ask the presenter to format the result")
  }
}

