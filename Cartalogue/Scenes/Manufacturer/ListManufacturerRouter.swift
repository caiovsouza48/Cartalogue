//
//  ListManufacturerRouter.swift
//  Cartalogue
//
//  Created by Caio de Souza on 24/04/2018.
//  Copyright (c) 2018 Caio de Souza. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol ListManufacturerRoutingLogic{
  func routeToMainTypes(segue: UIStoryboardSegue?)
}

protocol ListManufacturerDataPassing{
  var dataStore: ListManufacturerDataStore? { get }
}

class ListManufacturerRouter: NSObject, ListManufacturerRoutingLogic, ListManufacturerDataPassing{
  weak var viewController: ListManufacturerViewController?
  var dataStore: ListManufacturerDataStore?
  
  // MARK: Routing
  
  func routeToMainTypes(segue: UIStoryboardSegue?)
  {
    if let segue = segue {
      let destinationVC = segue.destination as! MainTypesViewController
      var destinationDS = destinationVC.router!.dataStore!
      passDataToMainTypes(source: dataStore!, destination: &destinationDS)
    } else {
      let storyboard = UIStoryboard(name: "Main", bundle: nil)
      let destinationVC = storyboard.instantiateViewController(withIdentifier: "ListMainTypes") as! MainTypesViewController
      var destinationDS = destinationVC.router!.dataStore!
      passDataToMainTypes(source: dataStore!, destination: &destinationDS)
      navigateToMainTypes(source: viewController!, destination: destinationVC)
    }
  }

  // MARK: Navigation
  
  func navigateToMainTypes(source: ListManufacturerViewController, destination: MainTypesViewController) {
    source.show(destination, sender: nil)
  }
  
  // MARK: Passing data
  
  func passDataToMainTypes(source: ListManufacturerDataStore, destination: inout MainTypesDataStore) {
    destination.wkda = source.wkda!
  }
}
