//
//  MainTypesInteractor.swift
//  Cartalogue
//
//  Created by Caio de Souza on 27/04/2018.
//  Copyright (c) 2018 Caio de Souza. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MainTypesBusinessLogic {
    func doFetchMainTypes(request: MainTypes.FetchMainTypes.Request)
    func isLastPage(page: Int) -> Bool
    var wkdaID : String { get }
}

protocol MainTypesDataStore{
  var wkda: Wkda! { get set }
}

class MainTypesInteractor: MainTypesBusinessLogic, MainTypesDataStore {
  var presenter: MainTypesPresentationLogic?
  var worker: ManufacturerWorker?
  var totalPageCount: Int = Int.max
  var wkda: Wkda!

  var wkdaID: String{
    return wkda.id
  }
  
  // MARK: Do something
  
  func doFetchMainTypes(request: MainTypes.FetchMainTypes.Request) {
    guard request.parameters.page < totalPageCount else {
        return
    }
    let client = ManufacturerRestAPI(client: ApiClientImplementation(urlSessionConfiguration: URLSessionConfiguration.default, completionHandlerQueue: OperationQueue.main))
    worker = ManufacturerWorker(manufacturerStore: client)
    defer{
        self.presenter?.endRefreshControlIfNeeded()
    }
    worker?.fetchMainTypes(parameters: request.parameters, completionHandler: { (result) in
        switch result{
        case .failure(let error):
            self.presenter?.presentErrorAlert(title: "Error", message: error.localizedDescription)
            
            break
        case .success(let apiManufacturer):
            self.totalPageCount = apiManufacturer.totalPageCount
            let response = MainTypes.FetchMainTypes.Response(
                mainTypes: apiManufacturer)
            self.presenter?.presentFetchManufacturers(response: response)
        }
      })
   }

  func isLastPage(page: Int) -> Bool {
    return page >= totalPageCount
  }
}
