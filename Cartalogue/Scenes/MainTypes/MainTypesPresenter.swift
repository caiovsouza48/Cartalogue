//
//  MainTypesPresenter.swift
//  Cartalogue
//
//  Created by Caio de Souza on 27/04/2018.
//  Copyright (c) 2018 Caio de Souza. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//



protocol MainTypesPresentationLogic {
  func presentFetchManufacturers(response: MainTypes.FetchMainTypes.Response)
  func presentErrorAlert(title: String?, message: String?)
  func endRefreshControlIfNeeded()
}

class MainTypesPresenter: MainTypesPresentationLogic{
  weak var viewController: MainTypesDisplayLogic?
  
  // MARK: Present Fetch Manufacturers
    
  func presentFetchManufacturers(response: MainTypes.FetchMainTypes.Response) {
    var displayedMainType: [MainTypes.FetchMainTypes.ViewModel.DisplayedMainType] = []
    
    _ = response.mainTypes.wkdaArray.forEach { (wkda) in
        let name = wkda.name
        let displayedManufacturer = MainTypes.FetchMainTypes.ViewModel.DisplayedMainType(name: name)
        displayedMainType.append(displayedManufacturer)
        
    }
    let totalPageCount = response.mainTypes.totalPageCount
    
    let viewModel = MainTypes.FetchMainTypes.ViewModel(totalPageCount: totalPageCount,
                                                                   displayedMainType: displayedMainType)
    viewController?.displayFetchMainTypes(viewModel: viewModel)
    viewController?.updateCurrentPageLabel(viewModel: viewModel)
  }
  // MARK: Present Error Alert
  func presentErrorAlert(title: String?, message: String?) {
    viewController?.presentAlert(title: title, message: message)
    
  }

  func endRefreshControlIfNeeded() {
    viewController?.endRefreshControlIfNeeded()
  }
}
